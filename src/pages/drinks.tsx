import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import { DrinkList } from "../components/DrinkList";
import { useState } from "react";
import { Input } from "../components/Input";
import { Radio } from "../components/Radio";
import { useGetCategory } from "../hooks/useGetCategory";
import { NoResults } from "../components/NoResults";

const Drinks: NextPage = () => {
  const drinks = api.drinks.getDrinks.useQuery();
  const [selectedCategory, setSelectedCategory] = useState(19);
  const [search, setSearch] = useState("");
  const { data } = api.drinks.getCategories.useQuery();

  const { category: currentCategory } = useGetCategory(selectedCategory);

  const filteredDrinks = (drinks.data ?? [])
    .filter((drink) =>
      currentCategory?.categoryName.toLowerCase() === "all"
        ? true
        : drink.categoryId === currentCategory?.id
    )
    .filter((drink) =>
      search != ""
        ? drink.title.toLowerCase().includes(search.toLowerCase())
        : true
    );

  return (
    <>
      <Head>
        <title>Drinks</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen">
        <section className="container mx-auto py-10">
          <form>
            <div className="flex flex-col gap-3 px-2 md:grid md:grid-cols-3">
              <div className="col-span-1 flex flex-col gap-5 py-3">
                <h1 className="text-center text-xl font-bold uppercase md:text-left">
                  category: {currentCategory?.categoryName}
                </h1>
                <Input
                  label="Search by Name"
                  onChange={(e) => setSearch(e.target.value)}
                  value={search}
                  required={false}
                  inputMode="text"
                  placeholder="Enter product name"
                />
                <div className="flex snap-x flex-row gap-2 overflow-x-auto md:flex-col md:gap-1 md:overflow-auto">
                  {(data || []).map((category) => (
                    <Radio
                      key={category.id}
                      label={category.categoryName}
                      value={currentCategory?.categoryName ?? ""}
                      onChange={() => setSelectedCategory(category.id)}
                      checked={
                        category.categoryName.toLowerCase() ===
                        currentCategory?.categoryName.toLowerCase()
                      }
                    />
                  ))}
                </div>
              </div>
              <div className="col-span-1 grid auto-rows-max gap-4 md:col-span-2 md:grid-cols-2 md:py-10">
                {filteredDrinks.map((drink) => (
                  <DrinkList key={drink.id} {...drink} />
                ))}
                {filteredDrinks.length === 0 && <NoResults />}
              </div>
            </div>
          </form>
        </section>
      </main>
    </>
  );
};

export default Drinks;
