generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
    USER
    ADMIN
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Role      @default(USER)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Drink {
    id          String    @id @default(cuid())
    title       String    @db.Text()
    price       String    @db.Text()
    volume      String?   @db.Text()
    type        String?   @db.Text()
    tag         String?   @db.Text()
    categoryId  Int?
    createdDate DateTime  @default(now())
    description String?   @db.Text()
    updatedAt   DateTime  @default(now())
    image       String?   @db.Text()
    isHidden    Boolean   @default(false)
    category    Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category {
    id             Int     @id @default(autoincrement())
    categoryName   String  @db.Text()
    url            String? @db.Text()
    drinks         Drink[]
    addTypes       Boolean @default(false)
    addDescription Boolean @default(false)
    isDefault      Boolean @default(false)
}

model Store {
    id   Int    @id @default(autoincrement())
    name String
    logo String
}
